package com.tmz.ian.fragment;import android.app.ProgressDialog;import android.content.Intent;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ListView;import android.widget.Toast;import com.android.volley.Request;import com.android.volley.VolleyError;import com.tmz.ian.R;import com.tmz.ian.activity.DealDetailTab;import com.tmz.ian.adapters.CustomFavListAdapter;import com.tmz.ian.model.DealList;import com.tmz.ian.util.Constants;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import java.util.ArrayList;/** * A simple {@link Fragment} subclass. * Favorite Deal's List */public class FavoriteListFragment extends BaseFragment {    ListView userList;    CustomFavListAdapter userAdapter;    ArrayList<DealList> dealListArray = new ArrayList<DealList>();    private ProgressDialog mDialog;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_favorite_list, container, false);        userList = (ListView) view.findViewById(R.id.listView);        userList.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                DealList dealList = (DealList)parent.getItemAtPosition(position);                String dealId = dealList.getDealId();                Intent mainActivityInt = new Intent(getActivity(),DealDetailTab.class);                Bundle dealbundle = new Bundle();                dealbundle.putString("dealId",dealId);                dealbundle.putInt("pageId",0);                mainActivityInt.putExtras(dealbundle);                startActivity(mainActivityInt);               /* Fragment dealDetailTab = new DealDetailTab();                dealDetailTab.setArguments(args);                mFragmentManager = getFragmentManager();                mFragmentTransaction = mFragmentManager.beginTransaction();                mFragmentTransaction.replace(R.id.containerView,dealDetailTab).commit();*/            }        });        loadJsonData(Request.Method.GET, Constants.DEALSLIST + "Favorite", null, Constants.DEALSLIST,false);        return view;    }    /**     *     * @param show     * @param tag     * Showing and hiding progressdialog on service request     */    @Override    public void showProgress(boolean show, String tag) {        if (show) {            showDialog();        } else            hideDialog();    }    /**     *     * @param response     * @param tag     * Returned after response from server     */    @Override    public void onSuccess(JSONObject response, String tag) {        Log.v("Login result::",response.toString());        try {            int status = response.getInt("status");            if(status == 200)            {                JSONArray dataArray = response.optJSONArray("data");                for(int i = 0; i < dataArray.length(); i++)                {                    DealList dealList = new DealList();                    JSONObject dealObj= dataArray.getJSONObject(i);                    int dealId = dealObj.optInt("dealId");                    String dealName = dealObj.optString("dealName");                    String dealBy = dealObj.optString("dealBy");                    String dealStatus = dealObj.optString("dealStatus");                    String dealType = dealObj.optString("dealType");                    String dealSector = dealObj.optString("dealSector");                    String requiredMoney = dealObj.optString("requiredMoney");                    int dealCommentsNumber = dealObj.optInt("dealUpcomingMeeting");                    int dealUpcomingMeeting = dealObj.optInt("dealCommentsNumber");                    boolean isSponsoredDeal =  dealObj.optBoolean("isSponsoredDeal");                    dealList.setDealId(""+dealId);                    dealList.setDealCommentsNumber(dealCommentsNumber);                    dealList.setDealUpcomingMeeting(dealUpcomingMeeting);                    dealList.setDealName(dealName);                    dealList.setDealBy(dealBy);                    dealList.setDealType(dealType);                    dealList.setDealStatus(dealStatus);                    dealList.setDealSector(dealSector);                    dealList.setRequiredMoney(requiredMoney);                    dealList.setSponsoredDeal(isSponsoredDeal);                    dealListArray.add(dealList);                }                userAdapter = new CustomFavListAdapter(getActivity(), R.layout.fav_list_item,                        dealListArray);//                userArray.add(new User("Tata Consultancy Services","Husain","Software"));//                userArray.add(new User("Bharat Sanchar Nigam Limited","Himanshu","Telecom"));              //  userList.setItemsCanFocus(false);                userList.setAdapter(userAdapter);//                Intent mainActivityInt = new Intent(this,MainActivity.class);//                startActivity(mainActivityInt);            }            else            {                String message = response.optString("message");                Toast.makeText(getActivity(),message,Toast.LENGTH_LONG).show();            }        }        catch(JSONException je)        {            je.printStackTrace();        }    }    @Override    public void onError(VolleyError error, String message, String tag) {    }    public void showDialog() {        mDialog = new ProgressDialog(getActivity());        mDialog.setMessage("Please wait...");        mDialog.setCancelable(true);        mDialog.show();    }    public void hideDialog() {        if (mDialog != null && mDialog.isShowing()) {            mDialog.dismiss();        }    }}